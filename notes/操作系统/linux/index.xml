<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 小桀的笔记本</title>
    <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/</link>
    <description>Recent content in Linux on 小桀的笔记本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    
        <atom:link href="http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>tar&amp;gzip</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/targzip/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/targzip/</guid>
        <description></description>
      </item>
      
      <item>
        <title>待研究</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%BE%85%E7%A0%94%E7%A9%B6/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%BE%85%E7%A0%94%E7%A9%B6/</guid>
        <description></description>
      </item>
      
      <item>
        <title>cp将一个目录下的文件复制到另一个目录中</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/cp%E5%B0%86%E4%B8%80%E4%B8%AA%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%8D%E5%88%B6%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E7%9B%AE%E5%BD%95%E4%B8%AD/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/cp%E5%B0%86%E4%B8%80%E4%B8%AA%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%8D%E5%88%B6%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E7%9B%AE%E5%BD%95%E4%B8%AD/</guid>
        <description>源目录为source，目标目录为target，则如果target不存在，可直接使用如下指令完成复制： 1 2 3 cp -r source target 如果target目录已经存</description>
      </item>
      
      <item>
        <title>curl常用指令</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/curl%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/curl%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</guid>
        <description>我用curl帮助我解决不少问题了，我打算整理下我对其的需求及用法： curl -v google.com 测试google.com是否可以正常访问，google.com域名是</description>
      </item>
      
      <item>
        <title>curl访问时不检查证书</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/curl%E8%AE%BF%E9%97%AE%E6%97%B6%E4%B8%8D%E6%A3%80%E6%9F%A5%E8%AF%81%E4%B9%A6/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/curl%E8%AE%BF%E9%97%AE%E6%97%B6%E4%B8%8D%E6%A3%80%E6%9F%A5%E8%AF%81%E4%B9%A6/</guid>
        <description>指令如下： curl -k https://192.168.13.155:8006 curl --insecure https://192.168.13.155:8006 适用场景：https站点是我自己搭建的~~~ 参考资料 CURL 请求时不检测证书</description>
      </item>
      
      <item>
        <title>Linux 建立SSH免密登录</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux-%E5%BB%BA%E7%AB%8Bssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux-%E5%BB%BA%E7%AB%8Bssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</guid>
        <description>操作如下 优化后的方案，指令如下 ssh-copy-id mmpprd@10.44.2.106 ssh-copy-id mmpprd@10.44.0.177 i29PmmpImK</description>
      </item>
      
      <item>
        <title>Linux常用操作</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</guid>
        <description>md5 指令如下： md5sum 文件名 参考资料 Linux下对文件进行md5校验命令 Shell 变量 Shell —— 变量的声明和使用</description>
      </item>
      
      <item>
        <title>Linux查看所有的环境变量</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E6%9F%A5%E7%9C%8B%E6%89%80%E6%9C%89%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E6%9F%A5%E7%9C%8B%E6%89%80%E6%9C%89%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
        <description>指令如下： env</description>
      </item>
      
      <item>
        <title>Linux查看硬盘使用情况</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E6%9F%A5%E7%9C%8B%E7%A1%AC%E7%9B%98%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E6%9F%A5%E7%9C%8B%E7%A1%AC%E7%9B%98%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5/</guid>
        <description>df -h</description>
      </item>
      
      <item>
        <title>Linux端口映射</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</guid>
        <description>我不想用iptables、和firewall的方案，因为我对这些工具还不够熟悉，我只想一个小小的工具完成我的工作。最后我找到了socat（话</description>
      </item>
      
      <item>
        <title>Linux设置定时任务</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E8%AE%BE%E7%BD%AE%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</guid>
        <description>我开发了一个外卖提醒的脚本，每次运行的时候，会发送一条消息到我们的钉钉群，提醒我们点外卖，我将它放到了我的实验机上。开发的定时任务脚本如下：</description>
      </item>
      
      <item>
        <title>rdate指令的使用</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/rdate%E6%8C%87%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/rdate%E6%8C%87%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
        <description>过于无用，故作废 这个纯粹是用来玩的。用Netty开发了一个简单的时间服务，然后想用rdate去访问这个服务： rdate -p 192.168.28.118 # 输出 rdate: [192.168.28.118] Sat Aug 21 04:03:48 2021 Net</description>
      </item>
      
      <item>
        <title>rm指令在移除的时候排除一些文件</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/rm%E6%8C%87%E4%BB%A4%E5%9C%A8%E7%A7%BB%E9%99%A4%E7%9A%84%E6%97%B6%E5%80%99%E6%8E%92%E9%99%A4%E4%B8%80%E4%BA%9B%E6%96%87%E4%BB%B6/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/rm%E6%8C%87%E4%BB%A4%E5%9C%A8%E7%A7%BB%E9%99%A4%E7%9A%84%E6%97%B6%E5%80%99%E6%8E%92%E9%99%A4%E4%B8%80%E4%BA%9B%E6%96%87%E4%BB%B6/</guid>
        <description>我的需求是这样的，我需要拉下一个仓库，然后删除这个仓库中除.git外的所有文件，然后在这个仓库中放入我的新文件，在提交到远程仓库中。 我最后使</description>
      </item>
      
      <item>
        <title>shell定义变量和使用变量</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/shell%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%92%8C%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/shell%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%92%8C%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F/</guid>
        <description>shell定义变量和使用变量 first_name=&amp;quot;Bob&amp;quot; second_name=&amp;quot;bob&amp;quot; your_name=&amp;quot;$first_name $second_name&amp;quot; your_name2=&#39;Bob bob&#39;</description>
      </item>
      
      <item>
        <title>socks协议转http协议</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/socks%E5%8D%8F%E8%AE%AE%E8%BD%AChttp%E5%8D%8F%E8%AE%AE/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/socks%E5%8D%8F%E8%AE%AE%E8%BD%AChttp%E5%8D%8F%E8%AE%AE/</guid>
        <description>我的工具监听的是socks协议，socks协议的dns请求仍然会通过原来的网络进行解析，而我们的工具中只能指定socks5://不能指定so</description>
      </item>
      
      <item>
        <title>SSH 配置只允许秘钥登录</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/ssh-%E9%85%8D%E7%BD%AE%E5%8F%AA%E5%85%81%E8%AE%B8%E7%A7%98%E9%92%A5%E7%99%BB%E5%BD%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/ssh-%E9%85%8D%E7%BD%AE%E5%8F%AA%E5%85%81%E8%AE%B8%E7%A7%98%E9%92%A5%E7%99%BB%E5%BD%95/</guid>
        <description>操作步骤 如下代码生成秘钥对，可以一致按回车，使用默认值（我设置了密码） ssh-keygen 执行如下指令，将生成的pub秘钥添加到信任名单，并检查文件权限正确（</description>
      </item>
      
      <item>
        <title>xshell退出时关闭了通过nohup启动的应用</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/xshell%E9%80%80%E5%87%BA%E6%97%B6%E5%85%B3%E9%97%AD%E4%BA%86%E9%80%9A%E8%BF%87nohup%E5%90%AF%E5%8A%A8%E7%9A%84%E5%BA%94%E7%94%A8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/xshell%E9%80%80%E5%87%BA%E6%97%B6%E5%85%B3%E9%97%AD%E4%BA%86%E9%80%9A%E8%BF%87nohup%E5%90%AF%E5%8A%A8%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
        <description>我也是第一次遇到这种情况，我拿一台虚拟机帮同事开KT Connect的代码，并开启了一个端口转发，如下代码所示： nohup ktctl --namespace=dev connect --method=socks5 --dump2hosts &amp;gt; ktctl.log 2&amp;gt;&amp;amp;1 &amp;amp; nohup polipo -c /opt/polipo/config &amp;gt;</description>
      </item>
      
      <item>
        <title>不要尝试将一个Linux系统配置成网关服务器</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%B8%8D%E8%A6%81%E5%B0%9D%E8%AF%95%E5%B0%86%E4%B8%80%E4%B8%AAlinux%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E6%88%90%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%B8%8D%E8%A6%81%E5%B0%9D%E8%AF%95%E5%B0%86%E4%B8%80%E4%B8%AAlinux%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E6%88%90%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
        <description>我计划自己将一个Linux系统变成路由器。 为什么会有这样奇奇怪怪的需求呢？我原本是计划在J4125那台机器上做虚拟化，然后装OpenWRT外</description>
      </item>
      
      <item>
        <title>为root用户添加密码</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%B8%BAroot%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0%E5%AF%86%E7%A0%81/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%B8%BAroot%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0%E5%AF%86%E7%A0%81/</guid>
        <description>操作步骤 指令如下 1 2 3 sudo passwd root</description>
      </item>
      
      <item>
        <title>为系统新加一块硬盘</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%B8%BA%E7%B3%BB%E7%BB%9F%E6%96%B0%E5%8A%A0%E4%B8%80%E5%9D%97%E7%A1%AC%E7%9B%98/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E4%B8%BA%E7%B3%BB%E7%BB%9F%E6%96%B0%E5%8A%A0%E4%B8%80%E5%9D%97%E7%A1%AC%E7%9B%98/</guid>
        <description>我采用的方案比较简单： ls /dev/sd* // 进行分区 fdisk /dev/sdb n p 转折（使用默认） 转折（使用默认） w // 创建文件系统 mkfs -t ext4 /dev/sdb1 // 将硬盘信息写入/etc/fstab echo /dev/sdb1</description>
      </item>
      
      <item>
        <title>如何使用tcpdump抓包，并用鲨鱼分析</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8tcpdump%E6%8A%93%E5%8C%85%E5%B9%B6%E7%94%A8%E9%B2%A8%E9%B1%BC%E5%88%86%E6%9E%90/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8tcpdump%E6%8A%93%E5%8C%85%E5%B9%B6%E7%94%A8%E9%B2%A8%E9%B1%BC%E5%88%86%E6%9E%90/</guid>
        <description>这个技术存在的意义是可以让我对服务端的数据包管理更严格，避免一些不必要的问题造成我无法正常使用。 使用如下指令得到数据包的文件： 1 2 3 4 5 tcpdump -tttt</description>
      </item>
      
      <item>
        <title>快速取消代理设置</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%BF%AB%E9%80%9F%E5%8F%96%E6%B6%88%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E5%BF%AB%E9%80%9F%E5%8F%96%E6%B6%88%E4%BB%A3%E7%90%86%E8%AE%BE%E7%BD%AE/</guid>
        <description>我之前为了避免all_proxy给我实验代理不好的影响，我会直接新起一个shell。新的方案如下： unset all_proxy 参考资料 pip install报错：Miss</description>
      </item>
      
      <item>
        <title>查看当前使用的Shell</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E4%BD%BF%E7%94%A8%E7%9A%84shell/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E4%BD%BF%E7%94%A8%E7%9A%84shell/</guid>
        <description>代码如下： 1 2 3 echo $SHELL</description>
      </item>
      
      <item>
        <title>测试udp数据报是否可以正常传递</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E6%B5%8B%E8%AF%95udp%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E4%BC%A0%E9%80%92/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E6%B5%8B%E8%AF%95udp%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E4%BC%A0%E9%80%92/</guid>
        <description>操作步骤 安装nc工具： yum install -y nc 服务端监听 nc -l -u 0.0.0.0 80001 客户端发送数据报 nc -u 192.168.31.210 数据报一 数据报二 现象：客户端发送的数据报会显示在服务端 参考资料 测试u</description>
      </item>
      
      <item>
        <title>让Shell阻塞一会</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E8%AE%A9shell%E9%98%BB%E5%A1%9E%E4%B8%80%E4%BC%9A/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E8%AE%A9shell%E9%98%BB%E5%A1%9E%E4%B8%80%E4%BC%9A/</guid>
        <description>代码如下，单位为秒： 1 2 3 sleep 50 这个指令其实很强大，但是我没有深入研究。</description>
      </item>
      
      <item>
        <title>设置VIM缩进为4个空格</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E8%AE%BE%E7%BD%AEvim%E7%BC%A9%E8%BF%9B%E4%B8%BA4%E4%B8%AA%E7%A9%BA%E6%A0%BC/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E8%AE%BE%E7%BD%AEvim%E7%BC%A9%E8%BF%9B%E4%B8%BA4%E4%B8%AA%E7%A9%BA%E6%A0%BC/</guid>
        <description>拷贝配置文件到家目录： 1 2 3 4 5 6 7 # ubuntu cp /etc/vim/vimrc ~/.vimrc # centos cp /etc/vimrc ~/.vimrc 编辑该配置文件，增加如下内容 set tabstop=4 参考资料 Linux下设置vim的缩进为4个空格</description>
      </item>
      
      <item>
        <title>通过CoreDNS配置一个DNS服务器</title>
        <link>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E9%80%9A%E8%BF%87coredns%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AAdns%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/%E9%80%9A%E8%BF%87coredns%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%AAdns%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
        <description>参考资料如下，我已经成功配置出来了，但是我其实不需要这个服务： centos7快速安装coreDns</description>
      </item>
      
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Validation on 小桀的笔记本</title>
    <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/</link>
    <description>Recent content in Validation on 小桀的笔记本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 11 Jan 2020 14:09:21 +0900</lastBuildDate>
    
        <atom:link href="http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>@Valid与@Validation的区别.</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/valid%E4%B8%8Evalidation%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/valid%E4%B8%8Evalidation%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
        <description>@Valid与@Validation的区别： @Validation支持分组功能，@Valid不支持分组功能 @Validated用于类型、方法</description>
      </item>
      
      <item>
        <title>Bean Validation.</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/bean-validation/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/bean-validation/</guid>
        <description>最近研究基于注解的参数校验时接触了一些新的概念，整理一下。 Bean Validation Bean Validation是一整套关于数据验证的规范，JSR 303–Bean Val</description>
      </item>
      
      <item>
        <title>ConstraintValidator中调用addMessageParameter方法.</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/constraintvalidator%E4%B8%AD%E8%B0%83%E7%94%A8addmessageparameter%E6%96%B9%E6%B3%95/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/constraintvalidator%E4%B8%AD%E8%B0%83%E7%94%A8addmessageparameter%E6%96%B9%E6%B3%95/</guid>
        <description>我目前的这套方案可以说是以Validation的思想实现我需要的需求。 已存在的校验技术及我的校验注解需求 搞了大半天的成果，虽然不能很优雅的实</description>
      </item>
      
      <item>
        <title>如何校验普通的方法参数.</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E5%A6%82%E4%BD%95%E6%A0%A1%E9%AA%8C%E6%99%AE%E9%80%9A%E7%9A%84%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E5%A6%82%E4%BD%95%E6%A0%A1%E9%AA%8C%E6%99%AE%E9%80%9A%E7%9A%84%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0/</guid>
        <description>测试 测试非DTO参数 准备如下测试代码： 1 2 3 4 5 6 7 8 9 @Validated @Service public class TmpService { public void doService(@JNotBlank String inputParam) { // do something } } 这份代码有两个地方需要注意： 类上的注解只能为@Va</description>
      </item>
      
      <item>
        <title>对Request的内部对象进行校验.</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E5%AF%B9request%E7%9A%84%E5%86%85%E9%83%A8%E5%AF%B9%E8%B1%A1%E8%BF%9B%E8%A1%8C%E6%A0%A1%E9%AA%8C/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E5%AF%B9request%E7%9A%84%E5%86%85%E9%83%A8%E5%AF%B9%E8%B1%A1%E8%BF%9B%E8%A1%8C%E6%A0%A1%E9%AA%8C/</guid>
        <description>我的代码如下： Request: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 @Data public class ClientCalibrationReportRequest { /** * 上报内容详情 */ @NotNull private Detail detail; @Data public static class Detail { /** * 白平衡校准数据 */ @NotBlank private String wbs; } }</description>
      </item>
      
      <item>
        <title>开发自定义参数校验注解时需要注意的问题.</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E5%BC%80%E5%8F%91%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E5%BC%80%E5%8F%91%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C%E6%B3%A8%E8%A7%A3%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
        <description>一个约束注解可以关联多个验证器，根据要验证的属性类型选择合适的验证器，及代码中可能有如下写法： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</description>
      </item>
      
      <item>
        <title>组合约束.</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E7%BB%84%E5%90%88%E7%BA%A6%E6%9D%9F/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/springboot/validation/%E7%BB%84%E5%90%88%E7%BA%A6%E6%9D%9F/</guid>
        <description>代码如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 @Max(150) @Min(0) @Target({METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER, TYPE_USE}) @Retention(RUNTIME) @Documented @Constraint(validatedBy = {}) public @interface JAge { @OverridesAttribute(constraint = Max.class, name = &amp;#34;message&amp;#34;) @OverridesAttribute(constraint = Min.class, name = &amp;#34;message&amp;#34;) String message() default &amp;#34;年龄超出范围&amp;#34</description>
      </item>
      
    
  </channel>
</rss>
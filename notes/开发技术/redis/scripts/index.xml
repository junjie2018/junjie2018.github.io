<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scripts on 小桀的笔记本</title>
    <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/</link>
    <description>Recent content in Scripts on 小桀的笔记本</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    
        <atom:link href="http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>SpringBoot使用Redis脚本</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/springboot%E4%BD%BF%E7%94%A8redis%E8%84%9A%E6%9C%AC/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/springboot%E4%BD%BF%E7%94%A8redis%E8%84%9A%E6%9C%AC/</guid>
        <description>脚本如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 local key = KEYS[1] local value = ARGV[1] local expire = ARGV[2] if redis.call(&amp;#34;get&amp;#34;, key) == false then if redis.call(&amp;#34;set&amp;#34;, key, value) then if tonumber(expire) &amp;gt; 0 then redis.call(&amp;#34;expire&amp;#34;, key, expire) end return true end end return false 1 2 3 4 5 6 7 8 9 10 11</description>
      </item>
      
      <item>
        <title>实现状态消息的发送功能</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/%E5%AE%9E%E7%8E%B0%E7%8A%B6%E6%80%81%E6%B6%88%E6%81%AF%E7%9A%84%E5%8F%91%E9%80%81%E5%8A%9F%E8%83%BD/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/%E5%AE%9E%E7%8E%B0%E7%8A%B6%E6%80%81%E6%B6%88%E6%81%AF%E7%9A%84%E5%8F%91%E9%80%81%E5%8A%9F%E8%83%BD/</guid>
        <description>使用管道的方法实现代码如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 def create_status(conn, uid, message, *date): pipeline = conn.pipeline(True) pipeline.hget(&amp;#39;user:%s&amp;#39; % uid, &amp;#39;login&amp;#39;) pipeline.incr(&amp;#39;</description>
      </item>
      
      <item>
        <title>终止正在执行的脚本</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/%E7%BB%88%E6%AD%A2%E6%AD%A3%E5%9C%A8%E6%89%A7%E8%A1%8C%E7%9A%84%E8%84%9A%E6%9C%AC/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/%E7%BB%88%E6%AD%A2%E6%AD%A3%E5%9C%A8%E6%89%A7%E8%A1%8C%E7%9A%84%E8%84%9A%E6%9C%AC/</guid>
        <description>已经对结构进行了修改的Lua脚本将无法被中断 在使用EVAL或者EVALSHA执行Lua脚本的时候，用户可能会写出永远也不返回的脚本，导致其他</description>
      </item>
      
      <item>
        <title>返回值需要注意的地方</title>
        <link>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/%E8%BF%94%E5%9B%9E%E5%80%BC%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://junjie2018.github.io/notes/%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF/redis/scripts/%E8%BF%94%E5%9B%9E%E5%80%BC%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/</guid>
        <description>由于Lua的数据传入和传出的限制，由于Lua的数据传入和传出限制，Lua里面的某些数据类型是不允许进行传出的，而另外一些数据类型则需要在传出</description>
      </item>
      
    
  </channel>
</rss>